type Product {
    id: ID!
    name: String!
    images: [String!]!
    category: String!
    description: String
    price: Float!
    discount: Float
    size: SizeItems
    feature: Boolean
}

input ProductInput {
    name: String!
    images: [String!]!
    category: String!
    description: String
    price: Float!
    discount: Float
    size: SizeItemsInput!
    feature: Boolean
}

input SizeItemsInput {
    items: [SizeTypeInput!]!
}

input SizeTypeInput {
    size: String!
    quantity: Int!
}

type SizeItems {
    items: [SizeType!]!
}
type SizeType {
    size: String!
    quantity: Int!
}

extend type Product {
    inCart: Boolean
    inWishlist: Boolean
}

type Query {
    products: [Product]
    product(id: ID!): Product
}

type MessageProduct {
    message: String!
    productInfo: Product!
}
type Message {
    message: String!
}

type Mutation {
    addProduct(input: ProductInput!): MessageProduct
    updateProduct(
        id: ID!
        name: String
        images: [String]
        description: String
        price: Float
        discount: Float
        category: String
        size: [SizeTypeInput]
        feature: Boolean
    ): Product
    deleteProduct(id: ID!): MessageProduct
    deleteProducts(ids: [ID!]!): Message!
}
